security:
    encoders:
        App\Entity\Utilisateur: bcrypt

    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_USER]

    providers:
          users:
                name: user_provider
                entity:
                    class: App\Entity\Utilisateur
                    property: username
          in_memory: { memory: ~ }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
            form_login:
                login_path: login
                check_path: login
                provider: user_provider
                default_target_path: index
                always_use_default_target_path: true
                csrf_token_generator: security.csrf.token_manager
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 semaine
            logout:
                path: logout
                target: login
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control: # /!\ il faut bien faire attention à l'ordre dans lequel on écrit les règles d'accès /!\
        - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/check_last_login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/, roles: ROLE_USER }
        - { path: ^/, role: IS_AUTHENTICATED_REMEMBERED}
