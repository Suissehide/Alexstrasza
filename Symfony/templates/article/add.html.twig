{% extends 'layout.html.twig' %}

{% block title %}Index{% endblock %}

{% block stylesheets %}{% endblock %}

{% form_theme form _self %}

{% block _article_file_widget %}
    <div id="upload">
        <div id="drop">
            <p>Glisser/d√©poser une image</p>
            <a>
                <span class="fa fa-upload"></span>
                Charger
            </a>
            <input type="file" name="upl" {{ block('widget_attributes') }} multiple="multiple"/>
        </div>
        <ul></ul>
    </div>
{% endblock %}

{% block _article_sondage_options_widget %}
    <div class="scrollbar list-wrapper">
        {% if prototype is defined %}
            {% set attr = attr|merge({'data-prototype': form_row(prototype) }) %}
        {% endif %}
        {{ block('form_widget') }}
    </div>
    <a class="sondage-row option-add">
        <div class="btn-round">
            <i class="fa fa-plus"></i>
        </div>
        <p>
            Ajouter une option</p>
    </a>
{% endblock %}

{% block page_content %}
    <div class="article-wrapper">
        <div class="row">
            <div class="col-md-12 article-header">
                Nouvel article
            </div>
        </div>

        <div class="article-form">
            {{ form_start(form) }}
            {{ form_errors(form) }}

            <div class="form-row">
                {{ form_widget(form.titre) }}
            </div>
            <div class="form-row">
                {{ form_widget(form.contenu) }}
            </div>

            <div class="separator">Image</div>

            {{ form_row(form.file, {'required': false}) }}
            {{ form_widget(form.paths, {'required': false}) }}

            <div class="separator">Sondage</div>

            <a class="sondage-row sondage-add">
                <div class="btn-round">
                    <i class="fa fa-plus"></i>
                </div>
                <p>
                    Ajouter un sondage</p>
            </a>
            <div class="sondage-header hidden">
                <p>Sondage</p>
                <a class="btn btn-danger sondage-remove">
                    <span class="fa fa-times"></span>
                    Supprimer
                </a>
            </div>

            {{ form_widget(form.sondage, {'required': false}) }}

            <button type="submit" class="button submit-btn">Ajouter</button>

            {{ form_row(form._token) }}
            {{ form_end(form, {'render_rest' : false}) }}
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    <script type="text/javascript">

        /* Sondage Option
	    ================= */
        var $addTagLink = $('.option-add');
        var $collectionHolder = $('#article_sondage_options');
        $collectionHolder.data('index', $collectionHolder.find(':input').length);

        $('.sondage-add').on('click', function () {
            $(this).addClass("hidden");
            $('#article_sondage').removeClass("hidden");
            $('.sondage-header').removeClass("hidden");
        });

        $('.sondage-remove').on('click', function () {
            $('.sondage-header').addClass("hidden");
            $('#article_sondage').addClass("hidden");
            $('.sondage-add').removeClass("hidden");
            $collectionHolder.find('li').each(function () {
                $(this).remove();
            });
        });

        $addTagLink.on('click', function (e) {
            e.preventDefault();
            addTagForm($collectionHolder);
        });

        function addTagForm($collectionHolder) {
            var prototype = $collectionHolder.data('prototype');
            var index = $collectionHolder.data('index');
            var newForm = prototype.replace(/__name__/g, index);
            $collectionHolder.data('index', index + 1);
            var newFormLi = $('<li class="card"></li>').append(newForm);
            newFormLi.append('<a class="btn btn-danger remove-tag"><span class="fa fa-times"></span></a>');
            $collectionHolder.append(newFormLi);
        }

        $("form").on("click", ".remove-tag", function (e) {
            e.preventDefault();
            $(this).parent().remove();
            return false;
        });

        /* Ajax upload image
        ================= */
        var nFile = 0;

        $('#drop a').on('click', function () {
            $(this).parent().find('input').click();
        });

        $('#drop').on({
            'dragover dragenter': function (e) {
                e.preventDefault();
                e.stopPropagation();
            },
            'drop': function (e) {
                var dataTransfer = e.originalEvent.dataTransfer;
                if (dataTransfer && dataTransfer.files.length) {
                    e.preventDefault();
                    e.stopPropagation();
                    $.each(dataTransfer.files, function (i, file) {
                        /*
                        var reader = new FileReader();
                        reader.onload = $.proxy(function (file, $fileList, event) {
                            var img = file.type.match('image.*') ? "<img src='" + event.target.result + "' /> " : "";
                            $fileList.prepend($("<li>").append(img + file.name));
                        }, this, file, $("#fileList"));
                        reader.readAsDataURL(file);
                        */
                        upload(file);
                    });
                }
            }
        });

        $('#upload').on('change', function () {
            var file = document.getElementById("article_file").files[0];

            upload(file);

        });

        function upload(file) {
            var formData = new FormData();
            formData.append("file", file);
            var tpl = $('<li><div id="upload_' + nFile + '" class="bar_container"><div id="main_container"><div id="pbar" class="progress-pie-chart" data-percent="0"><div class="ppc-progress"><div class="ppc-progress-fill"></div></div><div class="ppc-percents"><div class="pcc-percents-wrapper"><span>%</span></div></div></div><progress style="display: none" id="progress_bar" value="0" max="100"></progress></div></div><p></p><span class="state"></span></li>');
            tpl
                .find('p')
                .text(file.name)
                .append('<i>' + formatFileSize(file.size) + '</i>');
            tpl.appendTo('ul');
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "{{ path( 'upload' ) }}", true);
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            onUploadInit();
            xhr.upload.addEventListener("load", onUploadComplete, false);
            xhr.upload.addEventListener("progress", onUploadProgress, false);
            xhr.onload = function () {
                if (xhr.readyState === xhr.DONE) {
                    if (xhr.status === 200) {
                        console.log(xhr.response);
                        tpl.addClass('complete');
                        addFile(xhr.response);
                    }
                } else {
                    tpl.addClass('error');
                }
                nFile += 1;
                var $el = $('#article_file');
                $el.wrap('<form>').closest('form').get(0).reset();
                $el.unwrap();
            };
            xhr.send(formData);
        }

        function onUploadInit() {}

        function onUploadComplete(event) {}

        function onUploadProgress(event) {
            if (event.lengthComputable) {
                var percentComplete = event.loaded / event.total;
                var progressbar = $('#upload_' + nFile + ' #progress_bar');

                value = progressbar.val();
                value = parseFloat(percentComplete * 100).toFixed(2);
                addValue = progressbar.val(value);

                $('#upload_' + nFile + ' .progress-value').html(value + '%');
                var $ppc = $('#upload_' + nFile + ' .progress-pie-chart'),
                    deg = 360 * value / 100;
                if (value > 50) {
                    $ppc.addClass('gt-50');
                }
                $('#upload_' + nFile + ' .ppc-progress-fill').css('transform', 'rotate(' + deg + 'deg)');
                $('#upload_' + nFile + ' .ppc-percents span').html(parseInt(value) + '%');
            }
        }

        function formatFileSize(bytes) {
            if (typeof bytes !== 'number') {
                return '';
            }
            if (bytes >= 1000000000) {
                return (bytes / 1000000000).toFixed(2) + ' GB';
            }
            if (bytes >= 1000000) {
                return (bytes / 1000000).toFixed(2) + ' MB';
            }
            return (bytes / 1000).toFixed(2) + ' KB';
        }

        function addFile(filename) {
            var filenameList = $('#article_paths');
            filenameList.data('index', filenameList.find(':input').length);
            var prototype = filenameList.data('prototype');
            var index = filenameList.data('index');
            var newForm = prototype.replace(/__name__/g, index);
            filenameList.data('index', index + 1);
            var newFormLi = $('<div class="hidden"></div>').append(newForm);
            filenameList.append(newFormLi);
            filenameList.find('div:last-child input').val(filename);
        }
    </script>
{% endblock %}